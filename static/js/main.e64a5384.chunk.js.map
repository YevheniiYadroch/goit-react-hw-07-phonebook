{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactListElement.jsx","components/ContactList/ContactList.jsx","App.jsx","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["addContact","createAction","deleteContact","searchContact","fetchContacts","createAsyncThunk","a","axios","get","data","pushContacts","contacts","length","post","getContacts","state","items","getFilter","filter","connect","dispatch","onAdd","e","contactsActions","useState","name","setName","number","setNumber","handleChange","currentTarget","value","className","onReset","onSubmit","preventDefault","form","target","some","item","toLowerCase","children","alert","reset","htmlFor","type","id","pattern","title","required","onChange","onSearch","ContactListElement","props","onDelete","list","includes","map","onClick","useDispatch","useEffect","contactsOperations","filterReducer","createReducer","actions","_","payload","itemsReducer","uuidv4","delete","dataset","fulfilled","action","isLoadingReducer","pending","rejected","errorReducer","combineReducers","isLoading","error","store","configureStore","reducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActionPaths","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e64a5384.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const addContact = createAction('contacts/add');\r\n\r\nexport const deleteContact = createAction('contacts/delete');\r\n   \r\nexport const searchContact = createAction('contacts/search');\r\n\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n    'contacts/fetchContacts',\r\n    async () => {\r\n        const {data} = await axios.get('http://localhost:3000/contacts');\r\n        return data;\r\n    }\r\n)\r\n\r\nexport const pushContacts = createAsyncThunk(\r\n    'contacts/pushContacts',\r\n    async (contacts) => {\r\n        const { data } = await axios.get('http://localhost:3000/contacts');\r\n        if (contacts.length > data.length) {\r\n            await axios.post('http://localhost:3000/contacts', contacts[contacts.length - 1]);\r\n        }\r\n    }\r\n)","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { contactsActions } from '../../redux/contacts';\r\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\r\nimport './ContactForm.css';\r\n\r\nfunction ContactForm({contacts, onAdd}) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    \r\n    const handleFormReset = () => {\r\n        setName('');\r\n        setNumber('');\r\n  }\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n        if (name === 'name') {\r\n            setName(value)\r\n        }\r\n        if (name === 'number') {\r\n            setNumber(value)\r\n        }\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const form = e.target;\r\n        if (contacts.some(item => item.name.toLowerCase() === e.target.children.name.value.toLowerCase())) {\r\n            alert(`${e.target.children.name.value} is already in contacts`);\r\n            form.reset();\r\n            return;\r\n        }\r\n        onAdd(e);\r\n        form.reset();\r\n    }\r\n\r\n        return (\r\n            <form className=\"ContactForm\" onReset={handleFormReset} onSubmit={handleSubmit}>\r\n                <label htmlFor=\"name\" className=\"ContactForm__name\">Name</label>\r\n                <input\r\n                    className=\"ContactForm__input\"\r\n                    value={name}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    onChange={handleChange}\r\n                />\r\n                <label htmlFor=\"number\" className=\"ContactForm__number\">\r\n                    Number\r\n                </label>\r\n                <input\r\n                    className=\"ContactForm__input\"\r\n                    value={number}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    id=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    onChange={handleChange}\r\n                />\r\n                <button type=\"submit\"  className=\"ContactForm__button\">Add contact</button>\r\n            </form>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: getContacts(state),\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAdd: (e) => dispatch(contactsActions.addContact(e))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { contactsActions } from '../../redux/contacts';\r\nimport './Filter.css';\r\n\r\nfunction Filter ({onSearch}) {\r\n        return (\r\n            <div className=\"Filter\">\r\n                <h3 className=\"Filter__title\">Find contacts by name</h3>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"search\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    onChange={onSearch}\r\n                />\r\n            </div>\r\n        )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSearch: (e) => dispatch(contactsActions.searchContact(e)),\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Filter);","import React from 'react';\r\n\r\nfunction ContactListElement({props}) {\r\n    return (\r\n        <p className=\"ContactList__text\" >{props.name}: {props.number}</p>\r\n    )\r\n    \r\n}\r\n\r\nexport default ContactListElement;","import React from 'react';\r\nimport ContactListElement from \"./ContactListElement\";\r\nimport { getContacts, getFilter } from \"../../redux/contacts/contacts-selectors\";\r\nimport { connect } from 'react-redux';\r\nimport { contactsActions } from '../../redux/contacts';\r\nimport './ContactList.css';\r\n\r\nfunction ContactList({ contacts, filter, onDelete }) {\r\n    const list = contacts.filter(item => item.name.toLowerCase().includes(filter.toLowerCase()))\r\n    return (\r\n        <ul className=\"ContactList\">\r\n            {list.map(item => (\r\n                <li className=\"ContactList__item\" key={item.id}>\r\n                    <ContactListElement props={item} />\r\n                    <button className=\"ContactList__button\" data-id={item.id} onClick={onDelete} type=\"button\">Delete</button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n    \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: getContacts(state),\r\n    filter: getFilter(state),\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDelete: (e) => dispatch(contactsActions.deleteContact(e)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React, { useEffect } from \"react\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { contactsOperations } from './redux/contacts';\r\nimport { getContacts } from \"./redux/contacts/contacts-selectors\";\r\nimport ContactForm from \"./components/ContactForm/ContactForm\";\r\nimport Filter from \"./components/Filter/Filter\";\r\nimport ContactList from \"./components/ContactList/ContactList\";\r\nimport './App.css';\r\n\r\nfunction App ({contacts}) {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    if (contacts.length !== 0) {  \r\n      dispatch(contactsOperations.pushContacts(contacts))\r\n    }\r\n  }, [contacts])\r\n\r\n\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Phonebook</h1>\r\n        <ContactForm />\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: getContacts(state),\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, null)(App);\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { combineReducers } from \"redux\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport * as actions from './contacts-actions';\r\nimport { fetchContacts, pushContacts } from './contacts-operations';\r\nimport axios from 'axios';\r\n\r\nconst filterReducer = createReducer('', {\r\n    [actions.searchContact]: (_, { payload }) => (payload.currentTarget.value)\r\n})\r\n\r\nconst itemsReducer = createReducer([], {\r\n    [actions.addContact]: (state, { payload }) => {\r\n        return [\r\n            ...state,\r\n            { id: uuidv4(), name: payload.target.children.name.value, number: payload.target.children.number.value }\r\n        ];\r\n    },\r\n    [actions.deleteContact]: (state, { payload }) => {\r\n        axios.delete(`http://localhost:3000/contacts/${payload.target.dataset.id}`)\r\n        return state.filter(item => item.id !== payload.target.dataset.id);\r\n    },\r\n    [fetchContacts.fulfilled]: (_, action) => action.payload,\r\n    [pushContacts.fulfilled]: (_, action) => action.payload,\r\n})\r\n\r\nconst isLoadingReducer = createReducer(false, {\r\n    [fetchContacts.pending]: () => true,\r\n    [fetchContacts.fulfilled]: () => false,\r\n    [fetchContacts.rejected]: () => false,\r\n})\r\n\r\nconst errorReducer = createReducer(null, {\r\n    [fetchContacts.rejected]: (_, action) => action.payload,\r\n    [fetchContacts.pending]: () => null,\r\n})\r\n\r\nexport default combineReducers({\r\n    items: itemsReducer,\r\n    filter: filterReducer,\r\n    isLoading: isLoadingReducer,\r\n    error: errorReducer,\r\n});","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts:  contactsReducer,\r\n    },\r\n    middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActionPaths: ['payload'],\r\n      },\r\n    }),\r\n})\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App.jsx';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}