{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactListElement.jsx","components/ContactList/ContactList.jsx","App.jsx","reportWebVitals.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["addContact","createAction","deleteContact","searchContact","fetchContacts","createAsyncThunk","a","axios","get","data","pushContacts","contacts","length","post","getContacts","state","items","getFilter","filter","ContactForm","initialState","name","number","handleFormReset","setState","handleChange","e","currentTarget","value","this","className","onReset","onSubmit","props","onChange","htmlFor","type","id","pattern","title","required","Component","Filter","ContactListElement","ContactList","onDelete","map","item","onClick","connect","dispatch","onAdd","contactsActions","onSearch","useDispatch","useEffect","contactsOperations","list","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","filterReducer","createReducer","actions","_","payload","itemsReducer","preventDefault","form","target","some","children","alert","reset","newState","uuidv4","delete","dataset","fulfilled","action","isLoadingReducer","pending","rejected","errorReducer","combineReducers","isLoading","error","store","configureStore","reducer","contactsReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ee0d723.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const addContact = createAction('contacts/add');\r\n\r\nexport const deleteContact = createAction('contacts/delete');\r\n   \r\nexport const searchContact = createAction('contacts/search');\r\n\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n    'contacts/fetchContacts',\r\n    async () => {\r\n        const {data} = await axios.get('http://localhost:3000/contacts');\r\n        return data;\r\n    }\r\n)\r\n\r\nexport const pushContacts = createAsyncThunk(\r\n    'contacts/pushContacts',\r\n    async (contacts) => {\r\n        const { data } = await axios.get('http://localhost:3000/contacts');\r\n        if (contacts.length > data.length) {\r\n            await axios.post('http://localhost:3000/contacts', contacts[contacts.length - 1]);\r\n        }\r\n    }\r\n)","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n","import React, { Component } from 'react';\r\nimport './ContactForm.css';\r\n\r\nclass ContactForm extends Component {\r\n    initialState = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n    \r\n    state = this.initialState;\r\n\r\n    handleFormReset = () => {\r\n    this.setState(() => this.initialState)\r\n  }\r\n\r\n    handleChange = e => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n\r\n        return (\r\n            <form className=\"ContactForm\" onReset={this.handleFormReset} onSubmit={this.props.onChange}>\r\n                <label htmlFor=\"name\" className=\"ContactForm__name\">Name</label>\r\n                <input\r\n                    className=\"ContactForm__input\"\r\n                    value={name}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    onChange={this.handleChange}\r\n                />\r\n                <label htmlFor=\"number\" className=\"ContactForm__number\">\r\n                    Number\r\n                </label>\r\n                <input\r\n                    className=\"ContactForm__input\"\r\n                    value={number}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    id=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    onChange={this.handleChange}\r\n                />\r\n                <button type=\"submit\"  className=\"ContactForm__button\">Add contact</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactForm;","import React, { Component } from 'react';\r\nimport './Filter.css';\r\n\r\nclass Filter extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Filter\">\r\n                <h3 className=\"Filter__title\">Find contacts by name</h3>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"search\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    onChange={this.props.onChange}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\n\r\nfunction ContactListElement({props}) {\r\n    return (\r\n        <p className=\"ContactList__text\" >{props.name}: {props.number}</p>\r\n    )\r\n    \r\n}\r\n\r\nexport default ContactListElement;","import React from 'react';\r\nimport ContactListElement from \"./ContactListElement\";\r\nimport './ContactList.css';\r\n\r\nfunction ContactList({props, onDelete}) {\r\n    return (\r\n        <ul className=\"ContactList\">\r\n            {props.map(item => (\r\n                <li className=\"ContactList__item\" key={item.id}>\r\n                    <ContactListElement props={item} />\r\n                    <button className=\"ContactList__button\" data-id={item.id} onClick={onDelete} type=\"button\">Delete</button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n    \r\n}\r\n\r\nexport default ContactList;","import React, { useEffect } from \"react\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\nimport { contactsActions, contactsOperations } from './redux/contacts';\r\nimport { getContacts, getFilter } from \"./redux/contacts/contacts-selectors\";\r\nimport ContactForm from \"./components/ContactForm/ContactForm\";\r\nimport Filter from \"./components/Filter/Filter\";\r\nimport ContactList from \"./components/ContactList/ContactList\";\r\nimport './App.css';\r\n\r\nfunction App ({contacts, filter, onAdd, onSearch, onDelete}) {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    if (contacts.length !== 0) {  \r\n      dispatch(contactsOperations.pushContacts(contacts))\r\n    }\r\n  }, [contacts])\r\n\r\n\r\n  const list = contacts.filter(item => item.name.toLowerCase().includes(filter.toLowerCase()))\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onChange={ onAdd}/>\r\n        <h2>Contacts</h2>\r\n        <Filter onChange={onSearch}/>\r\n        <ContactList props={list} onDelete={onDelete}/>\r\n      </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    contacts: getContacts(state),\r\n    filter: getFilter(state),\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAdd: (e) => dispatch(contactsActions.addContact(e)),\r\n    onDelete: (e) => dispatch(contactsActions.deleteContact(e)),\r\n    onSearch: (e) => dispatch(contactsActions.searchContact(e)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { combineReducers } from \"redux\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport * as actions from './contacts-actions';\r\nimport { fetchContacts, pushContacts } from './contacts-operations';\r\nimport axios from 'axios';\r\n\r\nconst filterReducer = createReducer('', {\r\n    [actions.searchContact]: (_, { payload }) => (payload.currentTarget.value)\r\n})\r\n\r\nconst itemsReducer = createReducer([], {\r\n    [actions.addContact]: (state, { payload }) => {\r\n            payload.preventDefault();\r\n            const form = payload.target;\r\n            if (state.some(item => item.name === payload.target.children.name.value)) {\r\n                alert(`${payload.target.children.name.value} is already in contacts`);\r\n                form.reset();\r\n                return;\r\n            }\r\n            const newState = [\r\n                ...state,\r\n                { id: uuidv4(), name: payload.target.children.name.value, number: payload.target.children.number.value }\r\n            ];\r\n            form.reset();\r\n            return newState;\r\n    },\r\n    [actions.deleteContact]: (state, { payload }) => {\r\n        axios.delete(`http://localhost:3000/contacts/${payload.target.dataset.id}`)\r\n        return state.filter(item => item.id !== payload.target.dataset.id);\r\n    },\r\n    [fetchContacts.fulfilled]: (_, action) => action.payload,\r\n    [pushContacts.fulfilled]: (_, action) => action.payload,\r\n})\r\n\r\nconst isLoadingReducer = createReducer(false, {\r\n    [fetchContacts.pending]: () => true,\r\n    [fetchContacts.fulfilled]: () => false,\r\n    [fetchContacts.rejected]: () => false,\r\n})\r\n\r\nconst errorReducer = createReducer(null, {\r\n    [fetchContacts.rejected]: (_, action) => action.payload,\r\n    [fetchContacts.pending]: () => null,\r\n})\r\n\r\nexport default combineReducers({\r\n    items: itemsReducer,\r\n    filter: filterReducer,\r\n    isLoading: isLoadingReducer,\r\n    error: errorReducer,\r\n});","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts:  contactsReducer,\r\n    },\r\n})\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}